version: "3.8"

services:
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    ports:
      - "127.0.0.1:5432:5432" # Bind to localhost only - accessible via SSH tunnel
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-narzedziadlatworcow}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres123}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  server:
    image: app.narzedziadlatworcow.pl:5000/server:latest
    build:
      context: .
      dockerfile: ./apps/narzedziadlatworcow.pl/server/Dockerfile
    environment:
      - NODE_ENV=production
      - DATABASE_PATH=/app/data/narzedziadlatworcow.pl.sql
      - DATABASE_VERSION=1
      - POSTGRES_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres123}@postgres:5432/${POSTGRES_DB:-narzedziadlatworcow}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY:-}
      - S3_SECRET_KEY=${S3_SECRET_KEY:-}
      - S3_BUCKET=${S3_BUCKET:-}
      - S3_ENDPOINT=${S3_ENDPOINT:-}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET:-}
      - FRONTEND_URL=${FRONTEND_URL:-}
      - API_BASE_URL=${API_BASE_URL:-}
    volumes:
      - server_data:/app/data
    depends_on:
      - postgres
    restart: unless-stopped

  caddy:
    image: app.narzedziadlatworcow.pl:5000/caddy:latest
    build:
      context: .
      dockerfile: apps/narzedziadlatworcow.pl/Dockerfile.caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - server
    restart: unless-stopped

volumes:
  caddy_data:
  caddy_config:
  server_data:
  postgres_data:
  mongo_data:
    external: true
